(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(QualifiedName(qualifier(SimpleName(identifier(*System))))(name(SimpleName(identifier(*out))))))(name(SimpleName(identifier(*println))))(arguments(StringLiteral(escapedValue(*"not equal")))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*ex))))(name(SimpleName(identifier(*printStackTrace)))))))))
(Block(statements(VariableDeclarationStatement(type(ParameterizedType(type(SimpleType(name(QualifiedName(qualifier(SimpleName(identifier(*Map))))(name(SimpleName(identifier(*Entry))))))))(typeArguments(SimpleType(name(SimpleName(identifier(*String)))))(SimpleType(name(SimpleName(identifier(*String))))))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*entry))))(initializer(MethodInvocation(expression(SimpleName(identifier(*itr))))(name(SimpleName(identifier(*next)))))))))(ExpressionStatement(expression(MethodInvocation(expression(QualifiedName(qualifier(SimpleName(identifier(*System))))(name(SimpleName(identifier(*out))))))(name(SimpleName(identifier(*println))))(arguments(InfixExpression(leftOperand(StringLiteral(escapedValue(*"Key = "))))(operator(*+))(rightOperand(MethodInvocation(expression(SimpleName(identifier(*entry))))(name(SimpleName(identifier(*getKey))))))(extendedOperands(StringLiteral(escapedValue(*"Â¥ Value = ")))(MethodInvocation(expression(SimpleName(identifier(*entry))))(name(SimpleName(identifier(*getValue)))))))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(QualifiedName(qualifier(SimpleName(identifier(*System))))(name(SimpleName(identifier(*out))))))(name(SimpleName(identifier(*println))))(arguments(StringLiteral(escapedValue(*"equal")))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*m_model))))(name(SimpleName(identifier(*setValueAt))))(arguments(SimpleName(identifier(*value)))(SimpleName(identifier(*y)))(PostfixExpression(operand(SimpleName(identifier(*x))))(operator(*++)))))))(ExpressionStatement(expression(MethodInvocation(expression(QualifiedName(qualifier(SimpleName(identifier(*System))))(name(SimpleName(identifier(*out))))))(name(SimpleName(identifier(*println))))(arguments(SimpleName(identifier(*x)))(SimpleName(identifier(*y)))))))))
